print("192372103-pavanesh")
def print_board(b): print(f"\n {b[0]} | {b[1]} | {b[2]}\n---|---|---\n {b[3]} | {b[4]} | {b[5]}\n---|---|---\n {b[6]} | {b[7]} | {b[8]}\n")
def win(b, p): return any(all(b[i] == p for i in line) for line in [[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]])
def moves(b): return [i for i in range(9) if b[i] == ' ']
def minimax(b, maxp):
    if win(b, 'O'): return 1
    if win(b, 'X'): return -1
    if ' ' not in b: return 0
    scores = []
    for i in moves(b):
        b[i] = 'O' if maxp else 'X'
        scores.append(minimax(b, not maxp))
        b[i] = ' '
    return max(scores) if maxp else min(scores)
def best_move(b):
    return max(moves(b), key=lambda i: (b:=b[:], b.__setitem__(i, 'O'), s := minimax(b, False))[2])
def play():
    b = [' '] * 9
    print("You: X | AI: O")
    while True:
        print_board(b)
        m = int(input("Your move (1-9): ")) - 1
        if b[m] != ' ': print("Invalid"); continue
        b[m] = 'X'
        if win(b, 'X'): print_board(b); print("You win!"); break
        if ' ' not in b: print_board(b); print("Draw!"); break
        b[best_move(b)] = 'O'
        if win(b, 'O'): print_board(b); print("AI wins!"); break
        if ' ' not in b: print_board(b); print("Draw!"); break

play()
